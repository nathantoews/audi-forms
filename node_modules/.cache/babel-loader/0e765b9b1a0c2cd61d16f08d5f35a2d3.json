{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/ntoews/Projects/audi-forms/components/Submit.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      mutation createPost($title: String!, $url: String!) {\\n        createPost(title: $title, url: $url) {\\n          id\\n          title\\n          votes\\n          url\\n          createdAt\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { allPostsQuery, allPostsQueryVars } from './PostList';\nexport default function Submit() {\n  return React.createElement(ApolloConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, function (client) {\n    return React.createElement(\"form\", {\n      onSubmit: function onSubmit(event) {\n        return handleSubmit(event, client);\n      },\n      className: \"jsx-3675017326\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"jsx-3675017326\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"input\", {\n      placeholder: \"title\",\n      name: \"title\",\n      type: \"text\",\n      required: true,\n      className: \"jsx-3675017326\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"url\",\n      name: \"url\",\n      type: \"url\",\n      required: true,\n      className: \"jsx-3675017326\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"jsx-3675017326\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(_JSXStyle, {\n      id: \"3675017326\",\n      __self: this\n    }, \"form.jsx-3675017326{border-bottom:1px solid #ececec;padding-bottom:20px;margin-bottom:20px;}h1.jsx-3675017326{font-size:20px;}input.jsx-3675017326{display:block;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9udG9ld3MvUHJvamVjdHMvYXVkaS1mb3Jtcy9jb21wb25lbnRzL1N1Ym1pdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFhc0IsQUFHK0MsQUFLakIsQUFHRCxjQUNLLENBSHJCLGlCQUxzQixDQVN0QixtQkFScUIsbUJBQ3JCIiwiZmlsZSI6Ii9Vc2Vycy9udG9ld3MvUHJvamVjdHMvYXVkaS1mb3Jtcy9jb21wb25lbnRzL1N1Ym1pdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwb2xsb0NvbnN1bWVyIH0gZnJvbSAncmVhY3QtYXBvbGxvJ1xuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCB7IGFsbFBvc3RzUXVlcnksIGFsbFBvc3RzUXVlcnlWYXJzIH0gZnJvbSAnLi9Qb3N0TGlzdCdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU3VibWl0ICgpIHtcbiAgcmV0dXJuIChcbiAgICA8QXBvbGxvQ29uc3VtZXI+XG4gICAgICB7Y2xpZW50ID0+IChcbiAgICAgICAgPGZvcm0gb25TdWJtaXQ9e2V2ZW50ID0+IGhhbmRsZVN1Ym1pdChldmVudCwgY2xpZW50KX0+XG4gICAgICAgICAgPGgxPlN1Ym1pdDwvaDE+XG4gICAgICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPSd0aXRsZScgbmFtZT0ndGl0bGUnIHR5cGU9J3RleHQnIHJlcXVpcmVkIC8+XG4gICAgICAgICAgPGlucHV0IHBsYWNlaG9sZGVyPSd1cmwnIG5hbWU9J3VybCcgdHlwZT0ndXJsJyByZXF1aXJlZCAvPlxuICAgICAgICAgIDxidXR0b24gdHlwZT0nc3VibWl0Jz5TdWJtaXQ8L2J1dHRvbj5cbiAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICBmb3JtIHtcbiAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlY2VjZWM7XG4gICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaDEge1xuICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnB1dCB7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9mb3JtPlxuICAgICAgKX1cbiAgICA8L0Fwb2xsb0NvbnN1bWVyPlxuICApXG59XG5cbmZ1bmN0aW9uIGhhbmRsZVN1Ym1pdCAoZXZlbnQsIGNsaWVudCkge1xuICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gIGNvbnN0IGZvcm0gPSBldmVudC50YXJnZXRcbiAgY29uc3QgZm9ybURhdGEgPSBuZXcgd2luZG93LkZvcm1EYXRhKGZvcm0pXG4gIGNvbnN0IHRpdGxlID0gZm9ybURhdGEuZ2V0KCd0aXRsZScpXG4gIGNvbnN0IHVybCA9IGZvcm1EYXRhLmdldCgndXJsJylcbiAgZm9ybS5yZXNldCgpXG5cbiAgY2xpZW50Lm11dGF0ZSh7XG4gICAgbXV0YXRpb246IGdxbGBcbiAgICAgIG11dGF0aW9uIGNyZWF0ZVBvc3QoJHRpdGxlOiBTdHJpbmchLCAkdXJsOiBTdHJpbmchKSB7XG4gICAgICAgIGNyZWF0ZVBvc3QodGl0bGU6ICR0aXRsZSwgdXJsOiAkdXJsKSB7XG4gICAgICAgICAgaWRcbiAgICAgICAgICB0aXRsZVxuICAgICAgICAgIHZvdGVzXG4gICAgICAgICAgdXJsXG4gICAgICAgICAgY3JlYXRlZEF0XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBgLFxuICAgIHZhcmlhYmxlczogeyB0aXRsZSwgdXJsIH0sXG4gICAgdXBkYXRlOiAocHJveHksIHsgZGF0YTogeyBjcmVhdGVQb3N0IH0gfSkgPT4ge1xuICAgICAgY29uc3QgZGF0YSA9IHByb3h5LnJlYWRRdWVyeSh7XG4gICAgICAgIHF1ZXJ5OiBhbGxQb3N0c1F1ZXJ5LFxuICAgICAgICB2YXJpYWJsZXM6IGFsbFBvc3RzUXVlcnlWYXJzXG4gICAgICB9KVxuICAgICAgcHJveHkud3JpdGVRdWVyeSh7XG4gICAgICAgIHF1ZXJ5OiBhbGxQb3N0c1F1ZXJ5LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgLi4uZGF0YSxcbiAgICAgICAgICBhbGxQb3N0czogW2NyZWF0ZVBvc3QsIC4uLmRhdGEuYWxsUG9zdHNdXG4gICAgICAgIH0sXG4gICAgICAgIHZhcmlhYmxlczogYWxsUG9zdHNRdWVyeVZhcnNcbiAgICAgIH0pXG4gICAgfVxuICB9KVxufVxuIl19 */\\n/*@ sourceURL=/Users/ntoews/Projects/audi-forms/components/Submit.js */\"));\n  });\n}\n\nfunction handleSubmit(event, client) {\n  event.preventDefault();\n  var form = event.target;\n  var formData = new window.FormData(form);\n  var title = formData.get('title');\n  var url = formData.get('url');\n  form.reset();\n  client.mutate({\n    mutation: gql(_templateObject()),\n    variables: {\n      title: title,\n      url: url\n    },\n    update: function update(proxy, _ref) {\n      var createPost = _ref.data.createPost;\n      var data = proxy.readQuery({\n        query: allPostsQuery,\n        variables: allPostsQueryVars\n      });\n      proxy.writeQuery({\n        query: allPostsQuery,\n        data: _objectSpread({}, data, {\n          allPosts: [createPost].concat(_toConsumableArray(data.allPosts))\n        }),\n        variables: allPostsQueryVars\n      });\n    }\n  });\n}","map":{"version":3,"sources":["/Users/ntoews/Projects/audi-forms/components/Submit.js"],"names":["ApolloConsumer","gql","allPostsQuery","allPostsQueryVars","Submit","client","event","handleSubmit","preventDefault","form","target","formData","window","FormData","title","get","url","reset","mutate","mutation","variables","update","proxy","createPost","data","readQuery","query","writeQuery","allPosts"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,cAA/B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,YAAjD;AAEA,eAAe,SAASC,MAAT,GAAmB;AAChC,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAC,MAAM;AAAA,WACL;AAAM,MAAA,QAAQ,EAAE,kBAAAC,KAAK;AAAA,eAAIC,YAAY,CAACD,KAAD,EAAQD,MAAR,CAAhB;AAAA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,IAAI,EAAC,OAAhC;AAAwC,MAAA,IAAI,EAAC,MAA7C;AAAoD,MAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAO,MAAA,WAAW,EAAC,KAAnB;AAAyB,MAAA,IAAI,EAAC,KAA9B;AAAoC,MAAA,IAAI,EAAC,KAAzC;AAA+C,MAAA,QAAQ,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA,0lGADK;AAAA,GADT,CADF;AA0BD;;AAED,SAASE,YAAT,CAAuBD,KAAvB,EAA8BD,MAA9B,EAAsC;AACpCC,EAAAA,KAAK,CAACE,cAAN;AACA,MAAMC,IAAI,GAAGH,KAAK,CAACI,MAAnB;AACA,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAX,CAAoBJ,IAApB,CAAjB;AACA,MAAMK,KAAK,GAAGH,QAAQ,CAACI,GAAT,CAAa,OAAb,CAAd;AACA,MAAMC,GAAG,GAAGL,QAAQ,CAACI,GAAT,CAAa,KAAb,CAAZ;AACAN,EAAAA,IAAI,CAACQ,KAAL;AAEAZ,EAAAA,MAAM,CAACa,MAAP,CAAc;AACZC,IAAAA,QAAQ,EAAElB,GAAF,mBADI;AAYZmB,IAAAA,SAAS,EAAE;AAAEN,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,GAAG,EAAHA;AAAT,KAZC;AAaZK,IAAAA,MAAM,EAAE,gBAACC,KAAD,QAAqC;AAAA,UAAnBC,UAAmB,QAA3BC,IAA2B,CAAnBD,UAAmB;AAC3C,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAC3BC,QAAAA,KAAK,EAAExB,aADoB;AAE3BkB,QAAAA,SAAS,EAAEjB;AAFgB,OAAhB,CAAb;AAIAmB,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACfD,QAAAA,KAAK,EAAExB,aADQ;AAEfsB,QAAAA,IAAI,oBACCA,IADD;AAEFI,UAAAA,QAAQ,GAAGL,UAAH,4BAAkBC,IAAI,CAACI,QAAvB;AAFN,UAFW;AAMfR,QAAAA,SAAS,EAAEjB;AANI,OAAjB;AAQD;AA1BW,GAAd;AA4BD","sourcesContent":["import { ApolloConsumer } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { allPostsQuery, allPostsQueryVars } from './PostList'\n\nexport default function Submit () {\n  return (\n    <ApolloConsumer>\n      {client => (\n        <form onSubmit={event => handleSubmit(event, client)}>\n          <h1>Submit</h1>\n          <input placeholder='title' name='title' type='text' required />\n          <input placeholder='url' name='url' type='url' required />\n          <button type='submit'>Submit</button>\n          <style jsx>{`\n            form {\n              border-bottom: 1px solid #ececec;\n              padding-bottom: 20px;\n              margin-bottom: 20px;\n            }\n            h1 {\n              font-size: 20px;\n            }\n            input {\n              display: block;\n              margin-bottom: 10px;\n            }\n          `}</style>\n        </form>\n      )}\n    </ApolloConsumer>\n  )\n}\n\nfunction handleSubmit (event, client) {\n  event.preventDefault()\n  const form = event.target\n  const formData = new window.FormData(form)\n  const title = formData.get('title')\n  const url = formData.get('url')\n  form.reset()\n\n  client.mutate({\n    mutation: gql`\n      mutation createPost($title: String!, $url: String!) {\n        createPost(title: $title, url: $url) {\n          id\n          title\n          votes\n          url\n          createdAt\n        }\n      }\n    `,\n    variables: { title, url },\n    update: (proxy, { data: { createPost } }) => {\n      const data = proxy.readQuery({\n        query: allPostsQuery,\n        variables: allPostsQueryVars\n      })\n      proxy.writeQuery({\n        query: allPostsQuery,\n        data: {\n          ...data,\n          allPosts: [createPost, ...data.allPosts]\n        },\n        variables: allPostsQueryVars\n      })\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}